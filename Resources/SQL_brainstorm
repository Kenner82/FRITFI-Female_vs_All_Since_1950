--Create directing_meta
---SELECT md.movie_id,
	md.release_date,
	dd.gender,
	dd.name,
	dd.job
-- Save into a new table
INTO directing_meta
FROM metadata as md
INNER JOIN dept_directing as dd
	ON (md.movie_id = dd.movie_id)
-- Add filters
ORDER BY md.release_date;

SELECT * FROM DIRECTING_META
ORDER BY movie_id;


--Calculate percentage of female vs male in directing _meta 
select gender, count(*) * 100.0 / sum(count(*)) over()
from directing_meta
group by gender;








-- Movie list with directing gender 1, genres and keywords
SELECT md.movie_id,
	md.release_date,
    md.title
	dd.job,
	ge.genre,
	ky.keyword
-- Save into a new table
INTO full_directing
FROM metadata as md
LEFT JOIN dept_directing as dd
	ON (md.movie_id = dd.movie_id)
INNER JOIN genres as ge
	ON (md.movie_id = ge.movie_id)
INNER JOIN keywords as ky
	ON (md.movie_id = ky.movie_id)
-- Add filters
WHERE (dd.gender = 1)
GROUP BY md.movie_id, ky.keyword, ge.genre, dd.job
ORDER BY md.release_date;

--Count distinct movie_ids 
SELECT COUNT (DISTINCT movie_id) as "Number of movies" FROM fe_direct;
--2612 unique movie_ids vs 26226 total row count 

-- Movie list with directing gender 0, genres and keywords
SELECT md.movie_id,
	md.release_date,
	dd.job,
	ge.genre,
	ky.keyword
-- Save into a new table
INTO unknown_directing 
FROM metadata as md
LEFT JOIN dept_directing as dd
	ON (md.movie_id = dd.movie_id)
INNER JOIN genres as ge
	ON (md.movie_id = ge.movie_id)
INNER JOIN keywords as ky
	ON (md.movie_id = ky.movie_id)
-- Add filters
WHERE (dd.gender = 0)
GROUP BY md.movie_id, ky.keyword, ge.genre, dd.job
ORDER BY md.release_date;

SELECT COUNT(DISTINCT movie_id) FROM unknown_directing;
--11532 unqiue movie_ids vs 116075 total row count 

-- Movie list with directing gender 2, genres and keywords
SELECT md.movie_id,
	md.release_date,
	dd.job,
	ge.genre,
	ky.keyword
-- Save into a new table
INTO male_directing 
FROM metadata as md
LEFT JOIN dept_directing as dd
	ON (md.movie_id = dd.movie_id)
INNER JOIN genres as ge
	ON (md.movie_id = ge.movie_id)
INNER JOIN keywords as ky
	ON (md.movie_id = ky.movie_id)
-- Add filters
WHERE (dd.gender = 2)
GROUP BY md.movie_id, ky.keyword, ge.genre, dd.job
ORDER BY md.release_date;

SELECT COUNT(DISTINCT movie_id) FROM male_directing;
--16115 unique movie_ids vs 163044 total rows 





















-- Carolyn's Notes

-- tables
- joined_gender_directing - imports csv from same name
	- joined_gender_directing.csv has movie_id, sum_gender, total_gender, and percent_female
- directing_percent - inner join from metadata and joined_gender_directing
	- results in movie_id, release_date, and percent_female




-- queries

create table joined_gender_all_departments(
	movie_id int not null,
	sum_gender float not null,
	total_gender float not null,
	percent_female float not null,
	primary key(movie_id)
)

select md.movie_id,
	md.release_date,
	jgad.percent_female
into all_departments_percent
from joined_gender_all_departments as jgad
inner join metadata as md
	on(md.movie_id=jgad.movie_id)



combine all gender_calculations with metadata



-- Flowchart


CrewETL
	- takes credits.csv, explodes, cleans, exports dept_(name)

all_deparments - has new data in old table
all_gender_calculations = new table
all_departments_percent = new table



